/* Диего увлекается коллекционированием наклеек. На каждой из них написано число, и каждый коллекционер мечтает собрать наклейки со всеми встречающимися числами.
Диего собрал N наклеек, некоторые из которых, возможно, совпадают.Как - то раз к нему пришли K коллекционеров.i - й из них собрал все наклейки с номерами не меньшими, чем pi.Напишите программу, которая поможет каждому из коллекционеров определить, сколько недостающих ему наклеек есть у Диего.Разумеется, гостей Диего не интересуют повторные экземпляры наклеек.Формат ввода В первой строке содержится единственное число N(0 ≤ N ≤ 100 000) — количество наклеек у Диего.В следующей строке содержатся N целых неотрицательных чисел(не обязательно различных) — номера наклеек Диего.Все номера наклеек не превосходят 109. В следующей строке содержится число K(0 ≤ K ≤ 100 000) — количество коллекционеров, пришедших к Диего.В следующей строке содержатся K целых чисел pi(0 ≤ pi ≤ 109), где pi — наименьший номер наклейки, не интересующий i - го коллекционера.Формат вывода Для каждого коллекционера в отдельной строке выведите количество различных чисел на наклейках, которые есть у Диего, но нет у этого коллекционера.*/
#include <iostream>
#include <vector>
#include <iterator>
#include <algorithm>

 int main()
{
    int n;
    std::cin >> n;
    std::vector<int> v(n);

    for (int i = 0; i < n; i++)
        std::cin >> v[i];

    std::sort(v.begin(), v.end());
    v.erase(std::unique(v.begin(), v.end()), v.end());

    int k;
    std::cin >> k;
    for (int i = 0; i < k; i++)
    {
        int itmp;
        std::cin >> itmp;
        std::cout << std::distance(v.begin(), std::lower_bound(v.begin(), v.end(), itmp)) << std::endl;
    }
}